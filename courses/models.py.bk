from django.contrib.auth.models import AbstractUser
from django.db import models

class Course(models.Model):
    course_id = models.AutoField(primary_key=true, index=true)
    course_title = models.CharField(max_length=75)
    course_description = models.CharField(max_length=200)
    course_instructor = models.ForeignKey(Profs, related_name="course_instructor",)
    course_students = models.ManyToManyField(
        Students, 
        on_delete=models.CASCADE, 
    )

class User(AbstractUser):
  USER_TYPE_CHOICES = (
    is_student = models.BooleanField(default=False)
    is_prof = models.BooleanField(default=False)
  )
  user_type = models.PositiveSmallIntegerField(choices=USER_TYPE_CHOICES)

class Student(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE, primary_key=True)
    courses = models.ManyToManyField(Course, through='EnrolledCourse')
    first_name = models.CharField(max_length=15),
    last_name = models.CharField(max_length=20),

class Prof(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE, primary_key=True)
    courses = models.ManyToManyField(Course, through='TeachCourse')
    first_name = models.CharField(max_length=15)
    last_name = models.CharField(max_length=20)

class EnrolledCourse(models.Model):
    course = models.ForeignKey(Course, on_delete=models.CASCADE)
    students = models.ForeignKey(Student, on_delete=models.CASCADE)
    
